https://chatgpt.com/share/674b526b-b61c-8003-8d89-38dcb5686805

Step 1: Install Redis on Windows
Download Redis for Windows
https://github.com/tporadowski/redis/releases
Start Redis Server:
Open Command Prompt or PowerShell and navigate to the Redis directory:
bash
cd C:\Redis
redis-server.exe

redis-server.exe --port 6379

Optional: Set Redis as a Windows Service
To run Redis automatically on system startup:

Install it as a service:
bash
redis-server --service-install
redis-server --service-start
To uninstall later:
bash
redis-server --service-uninstall

Step 1.1: Install Redis on Windows
https://pecl.php.net/package/redis/6.1.0/windows
Place the DLL in the Correct Directory
Extract the downloaded file.
Copy php_redis.dll to the C:\xampp\php\ext directory.
*****i think is optional******
php.ini
extension=php_redis.dll

*****pc restart******

Step 2: In Laravel 11
install
composer require predis/predis

Set Up Laravel Configuration:
Ensure your Laravel .env file has the correct settings:
env
CACHE_DRIVER=redis
SESSION_DRIVER=redis
REDIS_HOST=127.0.0.1
REDIS_PORT=6379

php artisan o:c

Configure Laravel for Redis Sessions
---Update Laravel .env File: Set Redis as the session driver in your .env file:
.env
SESSION_DRIVER=redis
CACHE_DRIVER=redis

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

---Update config/session.php: Ensure the session configuration file uses the Redis driver:
'driver' => env('SESSION_DRIVER', 'file'),

php artisan o:c

// In a controller or route
session(['key' => 'value']);
return session('key'); // Should return "value"

---Check the Redis database to confirm session data is stored:
bash
redis-server
redis-cli
keys *
flushall


/logout
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Redis;

public function logout(Request $request)
{
    // Get the user's ID
    $userId = Auth::id();
    Auth::logout();

    // Retrieve all Redis keys for the user's sessions
    $keys = Redis::keys("laravel:sessions:*");

    foreach ($keys as $key) {
        $sessionData = Redis::get($key);
        if ($sessionData && str_contains($sessionData, $userId)) {
            Redis::del($key);
        }
    }

    // Invalidate the current session
    $request->session()->invalidate();

    // Regenerate CSRF token
    $request->session()->regenerateToken();

    return redirect('/');
}

